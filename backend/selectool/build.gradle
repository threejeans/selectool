plugins {
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.selectool'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    queryDslVersion = "5.0.0"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    //javax
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    //JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // REDIS
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // MySQL
    runtimeOnly 'mysql:mysql-connector-java'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // QueryDSL
    // TODO : 사용시 TODO에 있는 QueryDSL 관련 주석 풀기
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    //Oauth 소셜 로그인
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // email 전송
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL
// TODO : QueryDSL 사용시 주석 해제
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets { main.java.srcDir querydslDir }
compileQuerydsl { options.annotationProcessorPath = configurations.querydsl }
configurations {
    compileOnly { extendsFrom annotationProcessor }
    querydsl.extendsFrom compileClasspath
}//querydsl 추가 끝